
ðŸ“¦ backend/
 â”£ ðŸ“‚ src/
 â”ƒ â”£ ðŸ“‚ application/         # ðŸ’¡ Cas d'utilisation (services / use cases)
 â”ƒ â”ƒ â”£ ðŸ“‚ use-cases/         #  â”œâ”€â”€ Contient les logiques mÃ©tiers
 â”ƒ â”ƒ â”£ ðŸ“‚ dtos/              #  â”œâ”€â”€ DÃ©finitions des DTOs (Data Transfer Objects)
 â”ƒ â”ƒ â”— ðŸ“‚ exceptions/        #  â”œâ”€â”€ Gestion des exceptions spÃ©cifiques Ã  lâ€™application
 â”ƒ â”£ ðŸ“‚ domain/              # ðŸ’¡ CÅ“ur du mÃ©tier
 â”ƒ â”ƒ â”£ ðŸ“‚ entities/          #  â”œâ”€â”€ EntitÃ©s (classes qui modÃ©lisent le domaine)
 â”ƒ â”ƒ â”£ ðŸ“‚ repositories/      #  â”œâ”€â”€ Interfaces des repositories
 â”ƒ â”ƒ â”— ðŸ“‚ services/          #  â”œâ”€â”€ Logique mÃ©tier indÃ©pendante de lâ€™infra
 â”ƒ â”£ ðŸ“‚ infrastructure/      # ðŸ’¡ Couche infrastructure (DB, API, etc.)
 â”ƒ â”ƒ â”£ ðŸ“‚ database/          #  â”œâ”€â”€ ImplÃ©mentation des repositories
 â”ƒ â”ƒ â”£ ðŸ“‚ http/              #  â”œâ”€â”€ Express (routes, middleware, controllers)
 â”ƒ â”ƒ â”— ðŸ“‚ config/            #  â”œâ”€â”€ Configuration (dotenv, etc.)
 â”ƒ â”£ ðŸ“‚ adapters/            # ðŸ’¡ Interfaces d'entrÃ©e/sortie (Ports)
 â”ƒ â”ƒ â”£ ðŸ“‚ controllers/       #  â”œâ”€â”€ Controllers Express (entrÃ©e)
 â”ƒ â”ƒ â”£ ðŸ“‚ mappers/           #  â”œâ”€â”€ Mappers (DTO <-> EntitÃ©)
 â”ƒ â”ƒ â”— ðŸ“‚ external-services/ #  â”œâ”€â”€ Services externes (ex: API tiers)
 â”ƒ â”£ ðŸ“‚ shared/              # ðŸ’¡ Code rÃ©utilisable (utilitaires, types)
 â”ƒ â”£ ðŸ“œ app.ts               # ðŸ“Œ Point dâ€™entrÃ©e principal Express
 â”ƒ â”— ðŸ“œ server.ts            # ðŸ“Œ DÃ©marrage du serveur
 â”£ ðŸ“œ package.json
 â”£ ðŸ“œ tsconfig.json
 â”— ðŸ“œ .env



ðŸ“¦ backend/
 â”£ ðŸ“‚ src/
 â”ƒ â”£ ðŸ“‚ application/         
 â”ƒ â”£ ðŸ“‚ domain/
 â”ƒ â”£ ðŸ“‚ infrastructure/
 â”ƒ â”£ ðŸ“‚ adapters/
 â”ƒ â”£ ðŸ“‚ shared/
 â”ƒ â”£ ðŸ“œ app.ts
 â”ƒ â”— ðŸ“œ server.ts
 â”£ ðŸ“‚ tests/                # ðŸ“Œ Dossier pour les tests unitaires
 â”ƒ â”£ ðŸ“‚ application/        #  â”œâ”€â”€ Tests des cas d'utilisation
 â”ƒ â”£ ðŸ“‚ domain/             #  â”œâ”€â”€ Tests des entitÃ©s / services mÃ©tiers
 â”ƒ â”£ ðŸ“‚ infrastructure/     #  â”œâ”€â”€ Tests des repositories
 â”ƒ â”£ ðŸ“‚ adapters/           #  â”œâ”€â”€ Tests des controllers
 â”ƒ â”— ðŸ“œ setup.ts            # ðŸ“Œ Setup global des tests (ex: connexion Ã  une DB de test)
 â”£ ðŸ“œ package.json
 â”£ ðŸ“œ tsconfig.json
 â”— ðŸ“œ jest.config.js        # ðŸ“Œ Configuration Jest






jsonwebtoken : Gestion des tokens JWT
bcryptjs : Hashage des mots de passe
mysql2 : Connexion Ã  MySQL sans ORM
dotenv : Chargement des variables dâ€™environnement
nodemailer : Envoi dâ€™emails
passport & passport-google-oauth20 : Authentification avec Google OAuth



npm install @react-email/render @react-email/tailwind react react-dom

npm i @react-email/components


npm install --save-dev @types/react @types/react-dom


npx tsc --init


npm i @types/nodemailer


npx nodemon --version


PS C:\Users\user\Desktop\sublime-world_backend> tree /F
e numÃ©ro de sÃ©rie du volume est DA61-F042
C:.
â”‚   .env
â”‚   .gitignore
â”‚   nodemon.json
â”‚   package-lock.json
â”‚   package.json
â”‚   structure.sh
â”‚   tree.bat
â”‚   try-tsconfig.json
â”‚   tsconfig.json
â”‚
â””â”€â”€â”€src
    â”‚   server.ts
    â”‚
    â”œâ”€â”€â”€config
    â”‚       Database.ts
    â”‚
    â”œâ”€â”€â”€controllers
    â”‚       AuthController.ts
    â”‚
    â”œâ”€â”€â”€databases
    â”‚       user.sql
    â”‚
    â”œâ”€â”€â”€emails
    â”‚       VerificationEmail.tsx
    â”‚
    â”œâ”€â”€â”€logs
    â”œâ”€â”€â”€middlewares
    â”‚       AuthMiddleware.ts
    â”‚
    â”œâ”€â”€â”€models
    â”‚       User.ts
    â”‚
    â”œâ”€â”€â”€routes
    â”‚       AuthRoutes.ts
    â”‚
    â”œâ”€â”€â”€services
    â”‚       AuthService.ts
    â”‚       EmailService.ts
    â”‚
    â””â”€â”€â”€utils



npm install --save-dev jest ts-jest @types/jest

npm install openai


 npm install tailwindcss-animate --legacy-peer-deps





  shopt -s dotglob
  mv sublime-world_frontend/* .
  shopt -u dotglob


Essayer de Centraliser les methodes d'actions de l'utilisateur et indexÃ© le composant 
dans lequel ces mÃ©thodes peuvent Ãªtre appelÃ© 